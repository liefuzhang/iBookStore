@using iBookStoreMVC.ViewModels
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@model IEnumerable<iBookStoreMVC.ViewModels.Order>

@{
    ViewData["Title"] = "Manage Orders";
}

<h4>My Orders</h4>
<div class="orders">
    <div class="container">
        <article class="orders-titles row">
            <section class="orders-title col-2">Order number</section>
            <section class="orders-title col-4">Date</section>
            <section class="orders-title col-2">Total</section>
            <section class="orders-title col-2">Status</section>
            <section class="orders-title col-2"></section>
        </article>
        @if (Model != null && Model.Any())
        {
            foreach (var item in Model)
            {
                <article class="orders-items row">
                    <section class="orders-item col-2">@Html.DisplayFor(modelItem => item.OrderNumber)</section>
                    <section class="orders-item col-4">@Html.DisplayFor(modelItem => item.CreatedDate)</section>
                    <section class="orders-item col-2">@(HttpContextAccessor.HttpContext.Session.GetString("currency") ?? "NZD") @Html.DisplayFor(modelItem => item.Total)</section>
                    <section class="orders-item col-2">@Html.DisplayFor(modelItem => item.Status)</section>
                    <section class="orders-item col-1">
                        <a class="orders-link" asp-controller="OrderManagement" asp-action="Detail" asp-route-orderId="@item.OrderNumber">Detail</a>
                    </section>
                    <section class="orders-item col-1">
                        <a class="orders-link @(item.Status != OrderStatus.Paid ? "d-none" : "")" asp-action="OrderProcess" asp-route-orderId="@item.OrderNumber">Ship</a>
                    </section>
                </article>
            }
        }
    </div>
</div>