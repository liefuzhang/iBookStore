@using iBookStoreMVC.Service
@using iBookStoreMVC.ViewModels
@using Microsoft.AspNetCore.Identity
@inject IIdentityParser<ApplicationUser> UserManager

@if (User.FindFirst(x => x.Type == "preferred_username") != null) {
    <section class="col-4">
        <div class="dropdown identity-dropdown">
            <div class="identity-container dropdown-toggle" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="identity-name">Hello, @User.FindFirst(x => x.Type == "preferred_username").Value</span>
            </div>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                @if (User.IsInRole("Admin"))
                {
                    <a asp-controller="OrderManagement" asp-action="Index" class="dropdown-item">Manage orders</a>
                    <a asp-controller="CatalogManagement" asp-action="Index" class="dropdown-item">Manage catalog</a>
                    <a asp-controller="Wishlist" asp-action="Index" class="dropdown-item">My wishlist</a>
                }
                else
                {
                    <a asp-controller="Order" asp-action="Index" class="dropdown-item">My orders</a>
                    <a asp-controller="Wishlist" asp-action="Index" class="dropdown-item">My wishlist</a>
                }
                <form asp-area="" asp-controller="Account" asp-action="SignOut" method="post">
                    <button type="submit" class="btn-link dropdown-item">Log out</button>
                </form>
            </div>
        </div>
    </section>

    <section class="col-2">
        @await Component.InvokeAsync("Cart", new { user = UserManager.Parse(User) })
    </section>
} else {
    <section class="col-2">
        <div class="identity-container">
            <a asp-area="" asp-controller="Account" asp-action="SignIn">
                Login
            </a>
        </div>
    </section>
}