@using iBookStoreMVC.ViewModels

@model IEnumerable<iBookStoreMVC.ViewModels.Order>

@{
    ViewData["Title"] = "My Orders";
}

<h4>My Orders</h4>

@if (Model != null && Model.Any())
{
    <div class="orders">
        <div class="container">
            <article class="orders-titles row">
                <section class="orders-title col-2">Order number</section>
                <section class="orders-title col-4">Date</section>
                <section class="orders-title col-2">Total</section>
                <section class="orders-title col-2">Status</section>
                <section class="orders-title col-2"></section>
            </article>
            @foreach (var item in Model)
            {
        <article class="orders-items row">
            <section class="orders-item col-2">@Html.DisplayFor(modelItem => item.OrderNumber)</section>
            <section class="orders-item col-4">@Html.DisplayFor(modelItem => item.CreatedDate)</section>
            <section class="orders-item col-2">@item.Currency @Html.DisplayFor(modelItem => item.Total)</section>
            <section class="orders-item col-2">@Html.DisplayFor(modelItem => item.Status)</section>
            <section class="orders-item col-1">
                <a class="orders-link" asp-controller="Order" asp-action="Detail" asp-route-orderId="@item.OrderNumber">Detail</a>
            </section>
            <section class="orders-item col-1">
                @if (item.Status == OrderStatus.Submitted)
                {
                    <a class="orders-link" asp-controller="Order" asp-action="Cancel" asp-route-orderId="@item.OrderNumber">Cancel</a>
                }
            </section>
        </article>
            }
        </div>
    </div>
}
else
{
    <div class="empty-text">
        There is no order yet
    </div>
}



